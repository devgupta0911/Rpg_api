// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rpg_api.Data;

#nullable disable

namespace Rpgapi.Migrations
{
    [DbContext(typeof(Api_context))]
    partial class ApicontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rpg_api.Models.InvestmentStrategy", b =>
                {
                    b.Property<int>("InvestmentStrategyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestmentStrategyID"));

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("DeletedFlag")
                        .HasColumnType("int");

                    b.Property<decimal>("InvestmentAmount")
                        .HasColumnType("decimal(17,5)");

                    b.Property<int>("InvestmentTypeID")
                        .HasColumnType("int");

                    b.Property<string>("ModelAPLID")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime2");

                    b.Property<string>("StrategyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.HasKey("InvestmentStrategyID");

                    b.ToTable("InvestmentStrategies");
                });

            modelBuilder.Entity("Rpg_api.Models.InvestmentType", b =>
                {
                    b.Property<int>("InvestmentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestmentTypeID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("DeletedFlag")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentTypeName")
                        .HasMaxLength(250)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime2");

                    b.HasKey("InvestmentTypeID");

                    b.ToTable("InvestmentTypes");
                });

            modelBuilder.Entity("Rpg_api.Models.InvestorInfo", b =>
                {
                    b.Property<int>("InvestorInfoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvestorInfoID"));

                    b.Property<byte>("Active")
                        .HasColumnType("Tinyint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("DeletedFlag")
                        .HasColumnType("int");

                    b.Property<string>("InvestmentName")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("InvestorInfoID");

                    b.ToTable("InvestorInfos");
                });

            modelBuilder.Entity("Rpg_api.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<byte>("Active")
                        .HasColumnType("Tinyint");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Rpg_api.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<byte>("Active")
                        .HasColumnType("Tinyint");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("AdvisorID")
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("AgentID")
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ClientID")
                        .HasMaxLength(6)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Company")
                        .HasMaxLength(150)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("DateTime2");

                    b.Property<int>("DeletedFlag")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("DateTime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("SortName")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasMaxLength(100)
                        .HasColumnType("VARCHAR")
                        .HasComputedColumnSql("[LastName] + ' ' + [FirstName]");

                    b.Property<string>("State")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
